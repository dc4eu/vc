// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/consent": {
            "post": {
                "description": "Add consent endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "AddConsent",
                "operationId": "add-consent",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.AddConsentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/consent/get": {
            "post": {
                "description": "Get consent endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "GetConsent",
                "operationId": "get-consent",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.GetConsentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/model.Consent"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/credential": {
            "post": {
                "description": "Create credential endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "OIDCCredential",
                "operationId": "create-credential",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/openid4vci.CredentialRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1_issuer.MakeSDJWTReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/credential/.well-known/jwks": {
            "get": {
                "description": "JWKS endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "JWKS",
                "operationId": "issuer-JWKS",
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1_issuer.JwksReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/document": {
            "post": {
                "description": "Get document endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "GetDocument",
                "operationId": "get-document",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.GetDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.GetDocumentReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete one document endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "DeleteDocument",
                "operationId": "delete-document",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.DeleteDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/document/collect_id": {
            "post": {
                "description": "Get one document with collect id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "GetDocumentByCollectID",
                "operationId": "get-document-collect-id",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.GetDocumentCollectIDRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.GetDocumentCollectIDReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/document/identity": {
            "put": {
                "description": "Adding array of identities to one document",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "AddDocumentIdentity",
                "operationId": "add-document-identity",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.AddDocumentIdentityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete identity to document endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "DeleteDocumentIdentity",
                "operationId": "delete-document-identity",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.DeleteDocumentIdentityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/document/list": {
            "post": {
                "description": "List documents for an identity",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "DocumentList",
                "operationId": "document-list",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.DocumentListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.DocumentListReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/document/revoke": {
            "post": {
                "description": "Revoke one document",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "RevokeDocument",
                "operationId": "revoke-document",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.RevokeDocumentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/identity/mapping": {
            "post": {
                "description": "Identity mapping endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "IdentityMapping",
                "operationId": "identity-mapping",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.IdentityMappingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.IdentityMappingReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/notification": {
            "post": {
                "description": "notification endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "Notification",
                "operationId": "generic-notification",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.NotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.NotificationReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/revoke": {
            "post": {
                "description": "Revoke endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "Revoke",
                "operationId": "generic-revoke",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.RevokeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/apiv1.RevokeReply"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "description": "Upload endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "Upload",
                "operationId": "generic-upload",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiv1.UploadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiv1.AddConsentRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "authentic_source_person_id"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "authentic_source_person_id": {
                    "type": "string"
                },
                "consent_to": {
                    "type": "string"
                },
                "session_id": {
                    "type": "string"
                }
            }
        },
        "apiv1.AddDocumentIdentityRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "document_id",
                "document_type",
                "identities"
            ],
            "properties": {
                "authentic_source": {
                    "description": "required: true\nexample: SUNET",
                    "type": "string"
                },
                "document_id": {
                    "description": "required: true\nexample: 7a00fe1a-3e1a-11ef-9272-fb906803d1b8",
                    "type": "string"
                },
                "document_type": {
                    "description": "required: true\nexample: PDA1",
                    "type": "string"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Identity"
                    }
                }
            }
        },
        "apiv1.DeleteDocumentIdentityRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "authentic_source_person_id",
                "document_id",
                "document_type"
            ],
            "properties": {
                "authentic_source": {
                    "description": "required: true\nexample: SUNET",
                    "type": "string"
                },
                "authentic_source_person_id": {
                    "description": "required: true\nexample: 83c1a3c8-3e1a-11ef-9c01-6b6642c8d638",
                    "type": "string"
                },
                "document_id": {
                    "description": "required: true\nexample: 7a00fe1a-3e1a-11ef-9272-fb906803d1b8",
                    "type": "string"
                },
                "document_type": {
                    "description": "required: true\nexample: PDA1",
                    "type": "string"
                }
            }
        },
        "apiv1.DeleteDocumentRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "document_id",
                "document_type"
            ],
            "properties": {
                "authentic_source": {
                    "description": "required: true\nexample: skatteverket",
                    "type": "string"
                },
                "document_id": {
                    "description": "required: true\nexample: 5e7a981c-c03f-11ee-b116-9b12c59362b9",
                    "type": "string"
                },
                "document_type": {
                    "description": "required: true\nexample: PDA1",
                    "type": "string"
                }
            }
        },
        "apiv1.DocumentListReply": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DocumentList"
                    }
                }
            }
        },
        "apiv1.DocumentListRequest": {
            "type": "object",
            "required": [
                "identity"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "identity": {
                    "$ref": "#/definitions/model.Identity"
                },
                "valid_from": {
                    "type": "integer"
                },
                "valid_to": {
                    "type": "integer"
                }
            }
        },
        "apiv1.GetConsentRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "authentic_source_person_id"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "authentic_source_person_id": {
                    "type": "string"
                }
            }
        },
        "apiv1.GetDocumentCollectIDReply": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Document"
                }
            }
        },
        "apiv1.GetDocumentCollectIDRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "collect_id",
                "document_type",
                "identity"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "collect_id": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "identity": {
                    "$ref": "#/definitions/model.Identity"
                }
            }
        },
        "apiv1.GetDocumentReply": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.Document"
                }
            }
        },
        "apiv1.GetDocumentRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "document_id",
                "document_type"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                }
            }
        },
        "apiv1.IdentityMappingReply": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.IDMapping"
                }
            }
        },
        "apiv1.IdentityMappingRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "identity"
            ],
            "properties": {
                "authentic_source": {
                    "description": "required: true\nexample: SUNET",
                    "type": "string"
                },
                "identity": {
                    "$ref": "#/definitions/model.Identity"
                }
            }
        },
        "apiv1.NotificationReply": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/openid4vci.QR"
                }
            }
        },
        "apiv1.NotificationRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "document_id",
                "document_type"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                }
            }
        },
        "apiv1.RevokeDocumentRequest": {
            "type": "object",
            "required": [
                "authentic_source",
                "document_type",
                "revocation"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "revocation": {
                    "$ref": "#/definitions/model.Revocation"
                }
            }
        },
        "apiv1.RevokeReply": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "boolean"
                        }
                    }
                }
            }
        },
        "apiv1.RevokeRequest": {
            "type": "object",
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                },
                "revocation_id": {
                    "type": "string"
                }
            }
        },
        "apiv1.UploadRequest": {
            "type": "object",
            "required": [
                "document_data",
                "document_data_version",
                "meta"
            ],
            "properties": {
                "document_data": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "document_data_version": {
                    "type": "string"
                },
                "document_display": {
                    "$ref": "#/definitions/model.DocumentDisplay"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Identity"
                    }
                },
                "meta": {
                    "$ref": "#/definitions/model.MetaData"
                }
            }
        },
        "apiv1_issuer.Credential": {
            "type": "object",
            "properties": {
                "credential": {
                    "type": "string"
                }
            }
        },
        "apiv1_issuer.Jwk": {
            "type": "object",
            "properties": {
                "crv": {
                    "type": "string"
                },
                "d": {
                    "type": "string"
                },
                "kid": {
                    "type": "string"
                },
                "kty": {
                    "type": "string"
                },
                "x": {
                    "type": "string"
                },
                "y": {
                    "type": "string"
                }
            }
        },
        "apiv1_issuer.JwksReply": {
            "type": "object",
            "properties": {
                "issuer": {
                    "type": "string"
                },
                "jwks": {
                    "$ref": "#/definitions/apiv1_issuer.Keys"
                }
            }
        },
        "apiv1_issuer.Keys": {
            "type": "object",
            "properties": {
                "keys": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiv1_issuer.Jwk"
                    }
                }
            }
        },
        "apiv1_issuer.MakeSDJWTReply": {
            "type": "object",
            "properties": {
                "credentials": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apiv1_issuer.Credential"
                    }
                }
            }
        },
        "helpers.Error": {
            "type": "object",
            "properties": {
                "details": {},
                "title": {
                    "type": "string"
                }
            }
        },
        "helpers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "$ref": "#/definitions/helpers.Error"
                }
            }
        },
        "model.Collect": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "required: false\nexample: 98fe67fc-c03f-11ee-bbee-4345224d414f",
                    "type": "string"
                },
                "valid_until": {
                    "description": "required: false\nexample: 509567558\nformat: int64",
                    "type": "integer"
                }
            }
        },
        "model.Consent": {
            "type": "object",
            "required": [
                "consent_to",
                "created_at",
                "session_id"
            ],
            "properties": {
                "consent_to": {
                    "description": "required: true\nexample: \"Using my data for research\"",
                    "type": "string"
                },
                "created_at": {
                    "description": "required: true\nexample: 509567558\nformat: int64",
                    "type": "integer"
                },
                "session_id": {
                    "description": "required: true\nexample: \"sess-123\"",
                    "type": "string"
                }
            }
        },
        "model.Document": {
            "type": "object",
            "required": [
                "document_data",
                "meta"
            ],
            "properties": {
                "document_data": {},
                "meta": {
                    "$ref": "#/definitions/model.MetaData"
                }
            }
        },
        "model.DocumentDisplay": {
            "type": "object",
            "required": [
                "description_structured",
                "type",
                "version"
            ],
            "properties": {
                "description_structured": {
                    "description": "DescriptionStructured is a map of structured descriptions\nrequired: true\nexample: {\"en\": \"European Health Insurance Card\", \"sv\": \"Europeiskt sjukförsäkringskortet\"}",
                    "type": "object",
                    "additionalProperties": {}
                },
                "type": {
                    "description": "required: true\nexample: secure",
                    "type": "string"
                },
                "version": {
                    "description": "required: true\nexample: \"1.0.0\"",
                    "type": "string"
                }
            }
        },
        "model.DocumentList": {
            "type": "object",
            "required": [
                "meta",
                "qr"
            ],
            "properties": {
                "document_display": {
                    "$ref": "#/definitions/model.DocumentDisplay"
                },
                "meta": {
                    "$ref": "#/definitions/model.MetaData"
                },
                "qr": {
                    "$ref": "#/definitions/openid4vci.QR"
                }
            }
        },
        "model.IDMapping": {
            "type": "object",
            "properties": {
                "authentic_source_person_id": {
                    "type": "string"
                }
            }
        },
        "model.Identity": {
            "type": "object",
            "required": [
                "birth_date",
                "family_name",
                "given_name",
                "schema"
            ],
            "properties": {
                "age_birth_year": {
                    "type": "integer"
                },
                "age_in_years": {
                    "type": "integer"
                },
                "age_over_14": {
                    "type": "string"
                },
                "age_over_16": {
                    "type": "boolean"
                },
                "age_over_18": {
                    "type": "boolean"
                },
                "age_over_21": {
                    "type": "boolean"
                },
                "age_over_65": {
                    "type": "boolean"
                },
                "authentic_source_person_id": {
                    "description": "required: true\nexample: 65636cbc-c03f-11ee-8dc4-67135cc9bd8a",
                    "type": "string"
                },
                "birth_date": {
                    "description": "required: true\nexample: 1970-01-01 TODO: Day, month, and year?",
                    "type": "string"
                },
                "birth_family_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "birth_given_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "birth_place": {
                    "description": "required: true\nexample: Stockholm",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 2
                },
                "document_number": {
                    "description": "required: false\nexample:",
                    "type": "string"
                },
                "email_address": {
                    "description": "required: false\nexample: \u003cemail-address\u003e",
                    "type": "string"
                },
                "expiry_date": {
                    "description": "required: true\nexample: Date (and if possible time)",
                    "type": "string"
                },
                "family_name": {
                    "description": "required: true\nexample: Svensson",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "given_name": {
                    "description": "required: true\nexample: Magnus",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "issuance_date": {
                    "type": "string"
                },
                "issuing_authority": {
                    "description": "required: true\nexample:",
                    "type": "string"
                },
                "issuing_country": {
                    "description": "required: true\nexample:",
                    "type": "string"
                },
                "issuing_jurisdiction": {
                    "description": "required: false\nexample:",
                    "type": "string"
                },
                "mobile_phone_number": {
                    "description": "required: false\nexample: \u003c+mobile-phone-number\u003e",
                    "type": "string"
                },
                "nationality": {
                    "description": "required: true\nexample: SE",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "personal_administrative_number": {
                    "description": "required: false\nexample: \u003cpersonnummer\u003e",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 4
                },
                "picture": {
                    "description": "required: false\nexample: facial image compliant with ISO 19794-5 or ISO 39794 specifications",
                    "type": "string"
                },
                "resident_address": {
                    "description": "required: false\nexample: 221b Baker street",
                    "type": "string"
                },
                "resident_city": {
                    "description": "required: false\nexample: London",
                    "type": "string"
                },
                "resident_country": {
                    "description": "required: false\nexample: England",
                    "type": "string"
                },
                "resident_house_number": {
                    "description": "required: false\nexample: 221b",
                    "type": "string"
                },
                "resident_postal_code": {
                    "description": "required: false\nexample: W1U 6SG",
                    "type": "string"
                },
                "resident_state": {
                    "description": "required: false\nexample: england",
                    "type": "string"
                },
                "resident_street_address": {
                    "description": "required: false\nexample: Baker street",
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                },
                "schema": {
                    "$ref": "#/definitions/model.IdentitySchema"
                },
                "sex": {
                    "description": "required: false\nexample: 0 = not known, 1 = male, 2 = female, ...",
                    "type": "string",
                    "enum": [
                        "0",
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7",
                        "8",
                        "9"
                    ]
                },
                "trust_anchor": {
                    "type": "string"
                }
            }
        },
        "model.IdentitySchema": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "required: true\nexample: \"SE\"",
                    "type": "string"
                },
                "version": {
                    "description": "required: false\nexample: \"1.0.0\"",
                    "type": "string"
                }
            }
        },
        "model.MetaData": {
            "type": "object",
            "required": [
                "authentic_source",
                "document_id",
                "document_type",
                "document_version"
            ],
            "properties": {
                "authentic_source": {
                    "description": "required: true\nexample: SUNET",
                    "type": "string"
                },
                "collect": {
                    "$ref": "#/definitions/model.Collect"
                },
                "credential_valid_from": {
                    "description": "required: false\nexample: 509567558\nformat: int64",
                    "type": "integer"
                },
                "credential_valid_to": {
                    "description": "required: false\nexample: 509567558\nformat: int64",
                    "type": "integer"
                },
                "document_data_validation": {
                    "description": "required: false\nexample: file://path/to/schema.json or http://example.com/schema.json\nformat: string",
                    "type": "string"
                },
                "document_id": {
                    "description": "required: true\nexample: 5e7a981c-c03f-11ee-b116-9b12c59362b9",
                    "type": "string"
                },
                "document_type": {
                    "description": "required: true\nexample: PDA1",
                    "type": "string",
                    "enum": [
                        "urn:edui:elm:1",
                        "urn:edui:diploma:1",
                        "urn:edui:micro_credential:1",
                        "urn:eu.europa.ec.eudi:pid:1",
                        "urn:eudi:ehic:1",
                        "urn:eudi:pda1:1"
                    ]
                },
                "document_version": {
                    "description": "required: true\nexample: \"1.0.0\"",
                    "type": "string"
                },
                "real_data": {
                    "description": "RealData is a flag to indicate if the document contains real data\nrequired: true\nexample: true",
                    "type": "boolean"
                },
                "revocation": {
                    "description": "Revocation is a collection of fields representing a revocation",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Revocation"
                        }
                    ]
                }
            }
        },
        "model.Revocation": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID is the ID of the revocation\nrequired: false\nexample: 8dbd2680-c03f-11ee-a21b-034aafe41222",
                    "type": "string"
                },
                "reason": {
                    "description": "Reason is the reason for revocation\nrequired: false\nexample: lost or stolen",
                    "type": "string"
                },
                "reference": {
                    "$ref": "#/definitions/model.RevocationReference"
                },
                "revoked": {
                    "description": "Revoked is a flag to indicate if the document has been revoked\nrequired: false\nexample: false",
                    "type": "boolean"
                },
                "revoked_at": {
                    "description": "RevokedAt is the time the document was revoked or going to be revoked\nrequired: false\nexample: 509567558\nformat: int64",
                    "type": "integer"
                }
            }
        },
        "model.RevocationReference": {
            "type": "object",
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string"
                }
            }
        },
        "openid4vci.CredentialRequest": {
            "type": "object",
            "properties": {
                "credential_identifier": {
                    "description": "REQUIRED when credential_identifiers parameter was returned from the Token Response. It MUST NOT be used otherwise. It is a String that identifies a Credential that is being requested to be issued. When this parameter is used, the format parameter and any other Credential format specific parameters such as those defined in Appendix A MUST NOT be present.",
                    "type": "string"
                },
                "credential_response_encryption": {
                    "description": "CredentialIdentifier REQUIRED when credential_identifiers parameter was returned from the Token Response. It MUST NOT be used otherwise. It is a String that identifies a Credential that is being requested to be issued. When this parameter is used, the format parameter and any other Credential format specific parameters such as those defined in Appendix A MUST NOT be present.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/openid4vci.CredentialResponseEncryption"
                        }
                    ]
                },
                "format": {
                    "description": "Format REQUIRED when the credential_identifiers parameter was not returned from the Token Response. It MUST NOT be used otherwise. It is a String that determines the format of the Credential to be issued, which may determine the type and any other information related to the Credential to be issued. Credential Format Profiles consist of the Credential format specific parameters that are defined in Appendix A. When this parameter is used, the credential_identifier Credential Request parameter MUST NOT be present.",
                    "type": "string"
                },
                "proof": {
                    "description": "Proof OPTIONAL. Object containing the proof of possession of the cryptographic key material the issued Credential would be bound to. The proof object is REQUIRED if the proof_types_supported parameter is non-empty and present in the credential_configurations_supported parameter of the Issuer metadata for the requested Credential. The proof object MUST contain the following:",
                    "allOf": [
                        {
                            "$ref": "#/definitions/openid4vci.Proof"
                        }
                    ]
                }
            }
        },
        "openid4vci.CredentialResponseEncryption": {
            "type": "object",
            "required": [
                "alg",
                "enc",
                "jwk"
            ],
            "properties": {
                "alg": {
                    "type": "string"
                },
                "enc": {
                    "type": "string"
                },
                "jwk": {
                    "$ref": "#/definitions/openid4vci.JWK"
                }
            }
        },
        "openid4vci.JWK": {
            "type": "object",
            "required": [
                "crv",
                "d",
                "kid",
                "kty",
                "x",
                "y"
            ],
            "properties": {
                "crv": {
                    "type": "string"
                },
                "d": {
                    "type": "string"
                },
                "kid": {
                    "type": "string"
                },
                "kty": {
                    "type": "string"
                },
                "x": {
                    "type": "string"
                },
                "y": {
                    "type": "string"
                }
            }
        },
        "openid4vci.Proof": {
            "type": "object",
            "required": [
                "proof_type"
            ],
            "properties": {
                "attestation": {
                    "type": "string"
                },
                "jwt": {
                    "type": "string"
                },
                "ldp_vp": {
                    "type": "string"
                },
                "proof_type": {
                    "description": "ProofType REQUIRED. String denoting the key proof type. The value of this parameter determines other parameters in the key proof object and its respective processing rules. Key proof types defined in this specification can be found in Section 7.2.1.",
                    "type": "string",
                    "enum": [
                        "jwt",
                        "ldp_vp",
                        "cwt"
                    ]
                }
            }
        },
        "openid4vci.QR": {
            "type": "object",
            "properties": {
                "credential_offer_url": {
                    "type": "string"
                },
                "qr_base64": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.8",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Datastore API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
