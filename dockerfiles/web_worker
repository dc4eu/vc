# Compile
FROM docker.sunet.se/dc4eu/gobuild:latest AS builder

COPY . .
ARG SERVICE_NAME

RUN make proto

RUN --mount=type=cache,target=/root/.cache/go-build GOOS=linux GOARCH=amd64 go build -v -o bin/vc_$SERVICE_NAME -ldflags \
    "-X vc/pkg/model.BuildVariableGitCommit=$(git rev-list -1 HEAD) \
    -X vc/pkg/model.BuildVariableGitBranch=$(git rev-parse --abbrev-ref HEAD) \
    -X vc/pkg/model.BuildVariableTimestamp=$(date +'%F:T%TZ') \
    -X vc/pkg/model.BuildVariableGoVersion=$(go version|awk '{print $3}') \
    -X vc/pkg/model.BuildVariableGoArch=$(go version|awk '{print $4}') \
    -X vc/pkg/model.BuildVersion=$(git tag |sort -V|tail -n1) \
    -w -s --extldflags '-static'" ./cmd/$SERVICE_NAME/main.go

# Deploy
FROM debian:bookworm-slim

ARG SERVICE_NAME

WORKDIR /

RUN apt-get update && apt-get install -y curl procps iputils-ping less
RUN rm -rf /var/lib/apt/lists/*

COPY --from=builder /go/src/app/bin/vc_${SERVICE_NAME} /vc_service
COPY --from=builder /go/src/app/internal/${SERVICE_NAME}/static /static/

EXPOSE 8080

HEALTHCHECK --interval=20s --timeout=10s CMD curl --connect-timeout 5 http://localhost:8080/health | grep -q STATUS_OK

# vars in CMD and ENTRYPOINT are evaluated at runtime, that's why we use a static name on the binary.
CMD [ "./vc_service" ]