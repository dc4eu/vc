// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: v1-issuer.proto

package apiv1_issuer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MakeSDJWTRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentType  string                 `protobuf:"bytes,1,opt,name=documentType,proto3" json:"documentType,omitempty"`
	DocumentData  []byte                 `protobuf:"bytes,2,opt,name=documentData,proto3" json:"documentData,omitempty"`
	Jwk           *Jwk                   `protobuf:"bytes,3,opt,name=jwk,proto3" json:"jwk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MakeSDJWTRequest) Reset() {
	*x = MakeSDJWTRequest{}
	mi := &file_v1_issuer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MakeSDJWTRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeSDJWTRequest) ProtoMessage() {}

func (x *MakeSDJWTRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_issuer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeSDJWTRequest.ProtoReflect.Descriptor instead.
func (*MakeSDJWTRequest) Descriptor() ([]byte, []int) {
	return file_v1_issuer_proto_rawDescGZIP(), []int{0}
}

func (x *MakeSDJWTRequest) GetDocumentType() string {
	if x != nil {
		return x.DocumentType
	}
	return ""
}

func (x *MakeSDJWTRequest) GetDocumentData() []byte {
	if x != nil {
		return x.DocumentData
	}
	return nil
}

func (x *MakeSDJWTRequest) GetJwk() *Jwk {
	if x != nil {
		return x.Jwk
	}
	return nil
}

type MakeSDJWTReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Credentials   []*Credential          `protobuf:"bytes,1,rep,name=credentials,proto3" json:"credentials,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MakeSDJWTReply) Reset() {
	*x = MakeSDJWTReply{}
	mi := &file_v1_issuer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MakeSDJWTReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MakeSDJWTReply) ProtoMessage() {}

func (x *MakeSDJWTReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_issuer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MakeSDJWTReply.ProtoReflect.Descriptor instead.
func (*MakeSDJWTReply) Descriptor() ([]byte, []int) {
	return file_v1_issuer_proto_rawDescGZIP(), []int{1}
}

func (x *MakeSDJWTReply) GetCredentials() []*Credential {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type Credential struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Credential    string                 `protobuf:"bytes,1,opt,name=credential,proto3" json:"credential,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Credential) Reset() {
	*x = Credential{}
	mi := &file_v1_issuer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_v1_issuer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_v1_issuer_proto_rawDescGZIP(), []int{2}
}

func (x *Credential) GetCredential() string {
	if x != nil {
		return x.Credential
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_v1_issuer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_v1_issuer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_v1_issuer_proto_rawDescGZIP(), []int{3}
}

type JwksReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issuer        string                 `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Jwks          *Keys                  `protobuf:"bytes,2,opt,name=jwks,proto3" json:"jwks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JwksReply) Reset() {
	*x = JwksReply{}
	mi := &file_v1_issuer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JwksReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwksReply) ProtoMessage() {}

func (x *JwksReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_issuer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwksReply.ProtoReflect.Descriptor instead.
func (*JwksReply) Descriptor() ([]byte, []int) {
	return file_v1_issuer_proto_rawDescGZIP(), []int{4}
}

func (x *JwksReply) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *JwksReply) GetJwks() *Keys {
	if x != nil {
		return x.Jwks
	}
	return nil
}

type Keys struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Keys          []*Jwk                 `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Keys) Reset() {
	*x = Keys{}
	mi := &file_v1_issuer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Keys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Keys) ProtoMessage() {}

func (x *Keys) ProtoReflect() protoreflect.Message {
	mi := &file_v1_issuer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Keys.ProtoReflect.Descriptor instead.
func (*Keys) Descriptor() ([]byte, []int) {
	return file_v1_issuer_proto_rawDescGZIP(), []int{5}
}

func (x *Keys) GetKeys() []*Jwk {
	if x != nil {
		return x.Keys
	}
	return nil
}

type Jwk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Kid           string                 `protobuf:"bytes,1,opt,name=kid,proto3" json:"kid,omitempty"`
	Crv           string                 `protobuf:"bytes,2,opt,name=crv,proto3" json:"crv,omitempty"`
	Kty           string                 `protobuf:"bytes,3,opt,name=kty,proto3" json:"kty,omitempty"`
	X             string                 `protobuf:"bytes,4,opt,name=x,proto3" json:"x,omitempty"`
	Y             string                 `protobuf:"bytes,5,opt,name=y,proto3" json:"y,omitempty"`
	D             string                 `protobuf:"bytes,6,opt,name=d,proto3" json:"d,omitempty"`
	KeyOps        []string               `protobuf:"bytes,7,rep,name=key_ops,json=keyOps,proto3" json:"key_ops,omitempty"`
	Ext           bool                   `protobuf:"varint,8,opt,name=ext,proto3" json:"ext,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Jwk) Reset() {
	*x = Jwk{}
	mi := &file_v1_issuer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Jwk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Jwk) ProtoMessage() {}

func (x *Jwk) ProtoReflect() protoreflect.Message {
	mi := &file_v1_issuer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Jwk.ProtoReflect.Descriptor instead.
func (*Jwk) Descriptor() ([]byte, []int) {
	return file_v1_issuer_proto_rawDescGZIP(), []int{6}
}

func (x *Jwk) GetKid() string {
	if x != nil {
		return x.Kid
	}
	return ""
}

func (x *Jwk) GetCrv() string {
	if x != nil {
		return x.Crv
	}
	return ""
}

func (x *Jwk) GetKty() string {
	if x != nil {
		return x.Kty
	}
	return ""
}

func (x *Jwk) GetX() string {
	if x != nil {
		return x.X
	}
	return ""
}

func (x *Jwk) GetY() string {
	if x != nil {
		return x.Y
	}
	return ""
}

func (x *Jwk) GetD() string {
	if x != nil {
		return x.D
	}
	return ""
}

func (x *Jwk) GetKeyOps() []string {
	if x != nil {
		return x.KeyOps
	}
	return nil
}

func (x *Jwk) GetExt() bool {
	if x != nil {
		return x.Ext
	}
	return false
}

var File_v1_issuer_proto protoreflect.FileDescriptor

const file_v1_issuer_proto_rawDesc = "" +
	"\n" +
	"\x0fv1-issuer.proto\x12\tv1.issuer\"|\n" +
	"\x10MakeSDJWTRequest\x12\"\n" +
	"\fdocumentType\x18\x01 \x01(\tR\fdocumentType\x12\"\n" +
	"\fdocumentData\x18\x02 \x01(\fR\fdocumentData\x12 \n" +
	"\x03jwk\x18\x03 \x01(\v2\x0e.v1.issuer.jwkR\x03jwk\"I\n" +
	"\x0eMakeSDJWTReply\x127\n" +
	"\vcredentials\x18\x01 \x03(\v2\x15.v1.issuer.CredentialR\vcredentials\",\n" +
	"\n" +
	"Credential\x12\x1e\n" +
	"\n" +
	"credential\x18\x01 \x01(\tR\n" +
	"credential\"\a\n" +
	"\x05Empty\"H\n" +
	"\tJwksReply\x12\x16\n" +
	"\x06issuer\x18\x01 \x01(\tR\x06issuer\x12#\n" +
	"\x04jwks\x18\x02 \x01(\v2\x0f.v1.issuer.keysR\x04jwks\"*\n" +
	"\x04keys\x12\"\n" +
	"\x04keys\x18\x01 \x03(\v2\x0e.v1.issuer.jwkR\x04keys\"\x90\x01\n" +
	"\x03jwk\x12\x10\n" +
	"\x03kid\x18\x01 \x01(\tR\x03kid\x12\x10\n" +
	"\x03crv\x18\x02 \x01(\tR\x03crv\x12\x10\n" +
	"\x03kty\x18\x03 \x01(\tR\x03kty\x12\f\n" +
	"\x01x\x18\x04 \x01(\tR\x01x\x12\f\n" +
	"\x01y\x18\x05 \x01(\tR\x01y\x12\f\n" +
	"\x01d\x18\x06 \x01(\tR\x01d\x12\x17\n" +
	"\akey_ops\x18\a \x03(\tR\x06keyOps\x12\x10\n" +
	"\x03ext\x18\b \x01(\bR\x03ext2\x88\x01\n" +
	"\rIssuerService\x12E\n" +
	"\tMakeSDJWT\x12\x1b.v1.issuer.MakeSDJWTRequest\x1a\x19.v1.issuer.MakeSDJWTReply\"\x00\x120\n" +
	"\x04JWKS\x12\x10.v1.issuer.Empty\x1a\x14.v1.issuer.JwksReply\"\x00B%Z#vc/internal/gen/issuer/apiv1_issuerb\x06proto3"

var (
	file_v1_issuer_proto_rawDescOnce sync.Once
	file_v1_issuer_proto_rawDescData []byte
)

func file_v1_issuer_proto_rawDescGZIP() []byte {
	file_v1_issuer_proto_rawDescOnce.Do(func() {
		file_v1_issuer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_issuer_proto_rawDesc), len(file_v1_issuer_proto_rawDesc)))
	})
	return file_v1_issuer_proto_rawDescData
}

var file_v1_issuer_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_v1_issuer_proto_goTypes = []any{
	(*MakeSDJWTRequest)(nil), // 0: v1.issuer.MakeSDJWTRequest
	(*MakeSDJWTReply)(nil),   // 1: v1.issuer.MakeSDJWTReply
	(*Credential)(nil),       // 2: v1.issuer.Credential
	(*Empty)(nil),            // 3: v1.issuer.Empty
	(*JwksReply)(nil),        // 4: v1.issuer.JwksReply
	(*Keys)(nil),             // 5: v1.issuer.keys
	(*Jwk)(nil),              // 6: v1.issuer.jwk
}
var file_v1_issuer_proto_depIdxs = []int32{
	6, // 0: v1.issuer.MakeSDJWTRequest.jwk:type_name -> v1.issuer.jwk
	2, // 1: v1.issuer.MakeSDJWTReply.credentials:type_name -> v1.issuer.Credential
	5, // 2: v1.issuer.JwksReply.jwks:type_name -> v1.issuer.keys
	6, // 3: v1.issuer.keys.keys:type_name -> v1.issuer.jwk
	0, // 4: v1.issuer.IssuerService.MakeSDJWT:input_type -> v1.issuer.MakeSDJWTRequest
	3, // 5: v1.issuer.IssuerService.JWKS:input_type -> v1.issuer.Empty
	1, // 6: v1.issuer.IssuerService.MakeSDJWT:output_type -> v1.issuer.MakeSDJWTReply
	4, // 7: v1.issuer.IssuerService.JWKS:output_type -> v1.issuer.JwksReply
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_v1_issuer_proto_init() }
func file_v1_issuer_proto_init() {
	if File_v1_issuer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_issuer_proto_rawDesc), len(file_v1_issuer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_issuer_proto_goTypes,
		DependencyIndexes: file_v1_issuer_proto_depIdxs,
		MessageInfos:      file_v1_issuer_proto_msgTypes,
	}.Build()
	File_v1_issuer_proto = out.File
	file_v1_issuer_proto_goTypes = nil
	file_v1_issuer_proto_depIdxs = nil
}
